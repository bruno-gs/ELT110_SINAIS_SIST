%% Exponencial Positivaclear all;clc;close all;pkg load symbolic;%% Definindo o sinal a ser estudado%% Ona pulsada de dois níveis, período To e largura tau A1 = 1;                  % Amplitude em nível alto A2 = 0;                  % Amplitude em nível baixo tau = 1;                 % Duração em nível alto To = 20;                 % Período tendendo a infinito %%% Valores calculados fo = inv(To);            % frequência em Hz wo = 2*pi*fo;            % frequência angular N = 100;                  % Número de harmônicas da análise n=[-N:1:N];              % índice de cada harmônica f = n*fo;                % vetor de frequências da análise de Fourier%%% Vetor tempo para visualização do sinal%%% diferente da variável simbólica t%%% para efeito de organização da solução%%% existem outros caminhos M = 10000; Ts = To/M; tempo = [0:Ts:To];            % Tempo de simulação de um período do sinal g(t)  %% Determinando o termo Dn simbolicamentesyms n tDn = inv(To)*int(A1*exp(-j*n*wo*t),t,-tau/2,tau/2);D_o = inv(To)*int(A1,t,-tau/2,tau/2);%% Determinando o termo Dn numericamenten=[-N:1:N]; Dn = eval(Dn)D_o = eval(D_o)      % Corrigindo o valor médio (NaN devido a indeterminação)Dn(N+1) = D_o        % Subistituindo no vetor de respostas%% Zera os valores "pequenos""auxZ =  find(abs(Dn)<1e-4);Dn(auxZ) = 0;%% Desejamos deslocar o sinal de To/2d = tau/2;                     % deslocamento no tempo d=to%% Visualizando o espector de Amplitude figure(1) subplot(1,2,1); stem(f,abs(Dn)); title('Serie de Fourier do sinal g(t) - Modulo');xlabel('Frequencia em Hz');ylabel('Amplitude em  volts')subplot(1,2,2); stem(f,angle(Dn)*180/pi); title('Serie de Fourier do sinal g(t) - Fase');xlabel('Frequencia em Hz');ylabel('Amplitude em  volts')%% Sintetizando o sinaln=[-N:1:N];aux1  = 0; aux2  = 0;aux3  = 0;            for k = 0 : 2*N          aux1 = aux1 + Dn(k+1)*exp(j*n(k+1)*wo*tempo);  % sem deslocamento no tempo  aux2 = aux2 + Dn(k+1)*exp(j*n(k+1)*wo*tempo).*(exp(-j*n(k+1)*wo*d)+2*exp(-j*n(k+1)*wo*3*d)+2*exp(-j*n(k+1)*wo*5*d)+exp(-j*n(k+1)*wo*7*d));  % com deslocamento no tempo  endgr = aux1;gd = aux2;%% Visualizando o sinal reconstruidofigure(2)subplot(1,2,1); plot(tempo,gr)title('Reconstrucaoo do sinal g(t)');xlabel('Tempo em segundos');ylabel('Amplitude em  volts')subplot(1,2,2); plot(tempo,gd)title('Reconstrução do sinal g(t) deslocado');xlabel('Tempo em segundos');ylabel('Amplitude em  volts')